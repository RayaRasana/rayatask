"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.separateDigitsBySeparator = void 0;
var _1 = require(".");
var getDefaultOptions_1 = require("../../getDefaultOptions");
/**
 * separate digits in a persian | english string | number
 * @example
 * // returns "۱,۰۰۰,۰۰۰"
 * separateDigitsBySeparator("۱۰۰۰۰۰۰");
 */
var separateDigitsBySeparator = function (input, optionsParam) {
    var options = (0, getDefaultOptions_1.getDefaultOptions)(optionsParam, _1.separatorHandlerDefaultOptions);
    if (typeof input === 'number') {
        var numberOutput = input.toLocaleString();
        var separator = options.separator || '';
        return numberOutput.replace(/٬|,/g, separator);
    }
    // This regex matches any english numbers using \d and also matches
    // Any Persian number using \u06F0-\u06F90-9
    // So 2312۳۲۳8 is a valid number too.
    var numberRegex = /[\d|\u06F0-\u06F90-9]+/g;
    var output = input;
    if (!input.match(numberRegex))
        return input;
    output = output.replace(numberRegex, function (match) {
        // This regex is a modification for https://stackoverflow.com/a/25377176
        // It separates everything 3 digit/letter by digit/letter.
        return match.replace(/(.)(?=(.{3})+(?!.))/g, "$1".concat(options.separator));
    });
    return output;
};
exports.separateDigitsBySeparator = separateDigitsBySeparator;
