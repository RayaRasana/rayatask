import * as react from 'react';
import { TTimePickerTheme } from '@react-shamsi/timepicker';

declare type RangedDate = {
    from?: Date;
    to?: Date;
};
declare type TThemeClasses = {
    hoverBackgroundColor: string;
    headerBackgroundColor: string;
    headerTextColor: string;
    chevronRightColor: string;
    chevronLeftColor: string;
    topBarTextColor: string;
    bodyBackgroundColor: string;
    weekDaysTextColor: string;
    weekDaysBackgroundColor: string;
    daysColor: string;
    daysBackgroundColor: string;
    todayBorderColor: string;
    daysSelectedColor: string;
    daysSelectedBackgroundColor: string;
    offDaysColor: string;
    offDaysSelectedColor: string;
    footerBackgroundColor: string;
    footerButtonColor: string;
    clock: TTimePickerTheme;
};
declare type CalendarModes = "date" | "time";
declare type TCalendarThemes = "dark" | "darkRed" | "light" | TThemeClasses;
interface ICalendarProps {
    highlightToday?: boolean;
    onChange?: (newDate: Date, fromDate?: Date) => void;
    activeDate?: Date;
    defaultActiveDate?: Date;
    theme?: TCalendarThemes;
    showGoToToday?: boolean;
    minDate?: Date;
    maxDate?: Date;
    disabledDates?: Date[];
    showFooter?: boolean;
    disableTransitions?: boolean;
    bodyTransition?: "zoomIn" | "zoomOut" | "fade";
    showFridaysAsRed?: boolean;
    showTimePicker?: boolean;
    months?: string[];
    presistTimeOnDateChange?: boolean;
    style?: React.StyleHTMLAttributes<HTMLDivElement>;
    onConfirm?: (newDate: Date, fromDate?: Date) => void;
    onCancel?: () => void;
    ranged?: RangedDate | true;
}
interface IRangedCalendarProps extends Omit<ICalendarProps, "onChange" | "onConfirm"> {
    onChange?: (newDate: [Date, Date]) => void;
    onConfirm?: (newDate: [Date, Date]) => void;
}
declare const Calendar: react.ForwardRefExoticComponent<ICalendarProps & react.RefAttributes<HTMLDivElement>>;

export { Calendar, CalendarModes, ICalendarProps, IRangedCalendarProps, RangedDate, TThemeClasses };
