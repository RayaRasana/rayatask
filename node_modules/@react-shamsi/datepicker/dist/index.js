"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.tsx
var src_exports = {};
__export(src_exports, {
  DatePicker: () => DatePicker
});
module.exports = __toCommonJS(src_exports);

// src/Datepicker.tsx
var import_react_dom = require("@floating-ui/react-dom");
var import_react_dom_interactions = require("@floating-ui/react-dom-interactions");
var import_hooks = require("@mantine/hooks");
var import_calendar = require("@react-shamsi/calendar");
var import_date_fns_jalali = require("date-fns-jalali");
var import_persian_helpers = require("persian-helpers");
var import_react = require("react");
var import_jsx_runtime = require("react/jsx-runtime");
var DatePicker = ({
  autoUpdate,
  calendarProps,
  onChange,
  defaultDate,
  dateFormat = "yyyy/MM/dd hh:mm:ss aaa",
  date: controlledDate,
  to,
  persianDigits,
  calendarPortalElement,
  experimental_ranged: ranged,
  ...props
}) => {
  const { x, y, reference, floating, strategy } = (0, import_react_dom.useFloating)({
    placement: "bottom-end",
    strategy: "absolute",
    middleware: [(0, import_react_dom.flip)(), (0, import_react_dom.shift)({ crossAxis: true })],
    whileElementsMounted: import_react_dom.autoUpdate
  });
  const rangeToDate = (input, get) => Array.isArray(input) ? input[get === "from" ? 0 : 1] : input;
  const [date, setDate] = (0, import_react.useState)(
    rangeToDate(defaultDate, "to") || rangeToDate(controlledDate, "to")
  );
  const [fromDate, setFromDate] = (0, import_react.useState)(
    rangeToDate(defaultDate, "from") || rangeToDate(controlledDate, "from")
  );
  const [isOpen, setIsOpen] = (0, import_react.useState)(false);
  const [inputRef, setInputRef] = (0, import_react.useState)(null);
  const [calendarRef, setCalendarRef] = (0, import_react.useState)(null);
  (0, import_hooks.useClickOutside)(() => setIsOpen(false), null, [calendarRef, inputRef]);
  const updateDateHandler = (newDate, calendarFromDate) => {
    if (!controlledDate) {
      setDate(newDate);
      setFromDate(calendarFromDate);
    }
    if (ranged && calendarFromDate)
      onChange == null ? void 0 : onChange(calendarFromDate, newDate);
    else
      onChange == null ? void 0 : onChange(newDate);
  };
  const [isMounted, setIsMounted] = (0, import_react.useState)(false);
  (0, import_react.useEffect)(() => setIsMounted(true), []);
  (0, import_react.useEffect)(() => {
    if (!isMounted)
      return;
    setDate(rangeToDate(controlledDate, "to"));
    if (ranged)
      setFromDate(rangeToDate(controlledDate, "from"));
  }, [controlledDate]);
  const CalendarComponent = /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_calendar.Calendar, {
    ranged: Array.isArray(controlledDate) ? { from: controlledDate[0], to: controlledDate[1] } : ranged ? true : void 0,
    activeDate: Array.isArray(date) ? date[0] : date,
    onChange: (newDate, calendarFromDate) => autoUpdate && updateDateHandler(newDate, calendarFromDate),
    ref: (el) => {
      floating(el);
      setCalendarRef(el);
    },
    style: {
      position: strategy,
      top: y ?? 0,
      left: x ?? 0
    },
    showFooter: true,
    onConfirm: (newDate, calendarFromDate) => {
      updateDateHandler(newDate, calendarFromDate);
      setIsOpen(false);
    },
    onCancel: () => setIsOpen(false),
    ...calendarProps
  });
  return /* @__PURE__ */ (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, {
    children: [
      /* @__PURE__ */ (0, import_jsx_runtime.jsx)("div", {
        ref: setInputRef,
        children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)("input", {
          ref: reference,
          className: "p-2 rounded-md border border-gray-300",
          value: date ? `${fromDate ? (0, import_persian_helpers.convertDigits)((0, import_date_fns_jalali.format)(fromDate, dateFormat), {
            to: persianDigits ? "fa" : "en"
          }) + " - " : ""} ${(0, import_persian_helpers.convertDigits)((0, import_date_fns_jalali.format)(date, dateFormat), {
            to: persianDigits ? "fa" : "en"
          })}` : "",
          readOnly: true,
          onClick: (event) => {
            var _a;
            setIsOpen(
              (previousIsOpen) => previousIsOpen === false ? true : previousIsOpen
            );
            (_a = props.onClick) == null ? void 0 : _a.call(props, event);
          },
          ...props
        })
      }),
      calendarPortalElement ? /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_react_dom_interactions.FloatingPortal, {
        root: calendarPortalElement,
        children: isOpen && CalendarComponent
      }) : isOpen && CalendarComponent
    ]
  });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  DatePicker
});
